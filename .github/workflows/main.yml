name: Deploy Infrastructure and Functions

env:
  PRIMARY_REGION: "australiasoutheast"
  SECONDARY_REGIONS: "westeurope,westus"
  APP_NAME: "ebon-app"
  AZURE_FRONT_DOOR_ENDPOINT_NAME: "ebon-app-flz-test-1"
  AZURE_RESOURCE_GROUP: "Flz-Test-Ebon"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy_infra:
    name: Deploy Infrastructure via Bicep
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep Template
        run: |
          az deployment group create \
            --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
            --template-file infra/azuredeploy.bicep \
            --parameters appName=${{ env.APP_NAME }} \
                         primaryRegion=${{ env.PRIMARY_REGION }} \
                         secondaryRegions=[${{ env.SECONDARY_REGIONS }}] \
                         storageAccountType=Standard_LRS \
                         frontDoorSkuName=Standard_AzureFrontDoor \
                         frontDoorEndpointName=${{ env.AZURE_FRONT_DOOR_ENDPOINT_NAME }}

  build_functions:
    name: Build and Package Azure Functions
    runs-on: ubuntu-latest
    needs: deploy_infra
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x"

      - name: Restore Dependencies
        run: dotnet restore ./functions/FunctionApp.csproj

      - name: Build and Publish Function App
        run: dotnet publish ./functions/FunctionApp.csproj --configuration Release --output ./publish

      - name: Create Zip Package
        run: zip -r functionapp.zip ./publish

      - name: Upload Function App Artifact
        uses: actions/upload-artifact@v3
        with:
          name: functionapp-zip
          path: functionapp.zip

  set_matrix:
    name: Set Matrix for Deploy Functions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - id: set_matrix
        run: |
          # Remove the surrounding brackets from SECONDARY_REGIONS
          SECONDARY=${SECONDARY_REGIONS#\[}
          SECONDARY=${SECONDARY%\]}
          # Construct JSON array combining PRIMARY_REGION and secondary regions
          MATRIX_JSON="{\"region\": [\"${PRIMARY_REGION}\", ${SECONDARY}]}"
          echo "Matrix: $MATRIX_JSON"
          echo "::set-output name=matrix::$MATRIX_JSON"

  deploy_functions:
    name: Deploy Azure Functions to Regions
    runs-on: ubuntu-latest
    needs: [build_functions, set_matrix]
    strategy:
      matrix: ${{ fromJson(needs.set_matrix.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Function App Artifact
        uses: actions/download-artifact@v3
        with:
          name: functionapp-zip
          path: .

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Function App in ${{ matrix.region }}
        run: |
          FUNCTION_APP_NAME="${{ env.APP_NAME }}-func-${{ matrix.region }}"
          echo "Deploying to Function App: $FUNCTION_APP_NAME"
          az functionapp deployment source config-zip \
            --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
            --name $FUNCTION_APP_NAME \
            --src functionapp.zip
