name: Deploy Infrastructure and Functions

env:
  PRIMARY_REGION: 'centralus'
  SECONDARY_REGIONS: '["northeurope", "australiaeast"]'
  APP_NAME: "basta-ebon-app"
  AZURE_FRONT_DOOR_ENDPOINT_NAME: "basta-global-ebon"
  AZURE_RESOURCE_GROUP: "basta-global-ebon"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy_infra:
    name: Deploy Infrastructure via Bicep
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep Template
        run: |
          az deployment group create \
            --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
            --template-file infra/azuredeploy.bicep \
            --parameters appName=${{ env.APP_NAME }} \
                         primaryRegion='centralus' \
                         secondaryRegions='("northeurope", "australiaeast")' \
                         storageAccountType=Standard_LRS \
                         frontDoorSkuName=Standard_AzureFrontDoor \
                         frontDoorEndpointName=${{ env.AZURE_FRONT_DOOR_ENDPOINT_NAME }}

  set_matrix:
    name: Set Matrix for Deploy Functions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - id: set_matrix
        run: |
          # Remove the surrounding brackets from SECONDARY_REGIONS
          SECONDARY=${SECONDARY_REGIONS#\[}
          SECONDARY=${SECONDARY%\]}
          # Construct JSON array combining PRIMARY_REGION and secondary regions
          MATRIX_JSON="{\"region\": [\"${PRIMARY_REGION}\", ${SECONDARY}]}"
          echo "Matrix: $MATRIX_JSON"
          echo "::set-output name=matrix::$MATRIX_JSON"

  deploy_functions:
    name: Deploy Azure Functions to Regions
    runs-on: ubuntu-latest
    needs: [set_matrix, deploy_infra]
    strategy:
      matrix: ${{ fromJson(needs.set_matrix.outputs.matrix) }}
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4.2.2

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './src/DigitalReceiptBackend/DigitalReceiptBackend.csproj'
        dotnet build --configuration Release --output ./output
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1.5.1
      id: fa
      with:
        app-name: ${{ env.APP_NAME }}-func-${{ matrix.region }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
